services:
  connector-opencti:
    image: opencti/connector-opencti:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_OPENCTI_DATASETS}
      - CONNECTOR_ID=${CONNECTOR_ID_OPENCTI_DATASETS}
      - "CONNECTOR_NAME=OpenCTI Datasets"
      - CONNECTOR_SCOPE=marking-definition,identity,location
      - CONNECTOR_CONFIDENCE_LEVEL=100
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - CONFIG_SECTORS_FILE_URL=https://raw.githubusercontent.com/OpenCTI-Platform/datasets/master/data/sectors.json
      - CONFIG_GEOGRAPHY_FILE_URL=https://raw.githubusercontent.com/OpenCTI-Platform/datasets/master/data/geography.json
      - CONFIG_COMPANIES_FILE_URL=https://raw.githubusercontent.com/OpenCTI-Platform/datasets/master/data/companies.json
      - CONFIG_REMOVE_CREATOR=false
      - CONFIG_INTERVAL=7 # In days
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy

  connector-mitre:
    image: opencti/connector-mitre:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_MITRE_DATASETS}
      - CONNECTOR_ID=${CONNECTOR_ID_MITRE_DATASETS}
      - "CONNECTOR_NAME=MITRE Datasets"
      - CONNECTOR_SCOPE=tool,report,malware,identity,campaign,intrusion-set,attack-pattern,course-of-action,x-mitre-data-source,x-mitre-data-component,x-mitre-matrix,x-mitre-tactic,x-mitre-collection
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - MITRE_REMOVE_STATEMENT_MARKING=true
      - MITRE_INTERVAL=7 # In days
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy

  connector-mitre-atlas:
    image: opencti/connector-mitre-atlas:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_ID_MITRE_ATLAS}
      - CONNECTOR_ID=${CONNECTOR_TOKEN_MITRE_ATLAS}
      - "CONNECTOR_NAME=MITRE ATLAS"
      - CONNECTOR_SCOPE=identity,attack-pattern,course-of-action,relationship,x-mitre-collection,x-mitre-matrix,x-mitre-tactic
      - CONNECTOR_CONFIDENCE_LEVEL=75 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - MITRE_ATLAS_URL=https://raw.githubusercontent.com/mitre-atlas/atlas-navigator-data/main/dist/stix-atlas.json
      - MITRE_ATLAS_INTERVAL=7 # In days, must be strictly greater than 1
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy

  connector-disarm-framework:
    image: opencti/connector-disarm-framework:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_DISARM_FRAMEWORK}
      - CONNECTOR_ID=${CONNECTOR_ID_DISARM_FRAMEWORK}
      - "CONNECTOR_NAME=DISARM Framework"
      - CONNECTOR_SCOPE=marking-definition,identity,attack-pattern,course-of-action,intrusion-set,campaign,malware,tool,report,narrative,event,channel
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - DISARM_FRAMEWORK_URL=https://raw.githubusercontent.com/DISARMFoundation/DISARMframeworks/main/generated_files/DISARM_STIX/DISARM.json
      - DISARM_FRAMEWORK_INTERVAL=7 # In days, must be strictly greater than 1
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy

  connector-cve:
    image: opencti/connector-cve:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_CISA_CVE}
      - CONNECTOR_ID=${CONNECTOR_ID_CISA_CVE}
      - CONNECTOR_NAME=Common Vulnerabilities and Exposures
      - CONNECTOR_SCOPE=identity,vulnerability
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - CVE_BASE_URL=https://services.nvd.nist.gov/rest/json/cves
      - CVE_API_KEY=${CONNECTORS_CVE_API_KEY} # Required
      - CVE_INTERVAL=6 # Required, in hours advice min 2
      - CVE_MAX_DATE_RANGE=120 # In days, max 120
      - CVE_MAINTAIN_DATA=true # Required, retrieve only updated data
      - CVE_PULL_HISTORY=false # If true, CVE_HISTORY_START_YEAR is required
      - CVE_HISTORY_START_YEAR=2019 # Required if pull_history is True, min 2019 (see documentation CVE and CVSS base score V3.1)
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy

  connector-cpe:
    image: opencti/connector-cpe:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_CISA_CPE}
      - CONNECTOR_ID=${CONNECTOR_ID_CISA_CPE}
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Common Platform Enumeration
      - CONNECTOR_SCOPE=software
      - CONNECTOR_LOG_LEVEL=info
      - CPE_BASE_URL=https://services.nvd.nist.gov/rest/json/cpes/2.0
      - NIST_API_KEY=${CONNECTORS_NIST_API_KEY} # Required
      - CPE_INTERVAL=6h # Required, in hours advice min 6
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy
  connector-cisa-known-exploited-vulnerabilities:
    image: opencti/connector-cisa-known-exploited-vulnerabilities:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_BACKEND_URL}
      - OPENCTI_TOKEN=${CONNECTOR_TOKEN_CISA_KEV}
      - CONNECTOR_ID=${CONNECTOR_ID_CISA_KEV}
      - "CONNECTOR_NAME=CISA Known Exploited Vulnerabilities"
      - CONNECTOR_SCOPE=cisa
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=error
      - CISA_CATALOG_URL=https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json
      - CISA_CREATE_INFRASTRUCTURES=false
      - CISA_TLP=TLP:CLEAR
      - CISA_INTERVAL=2 # In days, must be strictly greater than 1
    networks:
      - opencti-network
    restart: always
    depends_on:
      opencti-backend:
        condition: service_healthy


networks:
  opencti-network:
    driver: bridge
